CREATE TABLE shoes (
    id                          SERIAL,
    name                        TEXT NOT NULL,
    "trueToSizeData"              int[] NOT NULL DEFAULT '{}',
    "trueToSizeCalculation"       numeric(14,13) NOT NULL DEFAULT 0.00,
    CONSTRAINT shoes_pkey PRIMARY KEY (id)
);

CREATE OR REPLACE FUNCTION CalculationTrueToSize()
RETURNS TRIGGER AS $$
DECLARE
    arrLen integer;
    arrSum integer;
BEGIN
    SELECT cardinality("trueToSizeData") INTO arrLen
    FROM shoes WHERE id=new.id;

    SELECT SUM(UNNEST(t)) INTO arrSum
    FROM (SELECT UNNEST("trueToSizeData") FROM shoes WHERE id=new.id) t;

    UPDATE shoes SET "trueToSizeCalculation" = (arrSum::NUMERIC/arrLen::NUMERIC) WHERE id=new.id;

    RETURN new;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_trueToSizeCalculation
AFTER UPDATE OF "trueToSizeData" ON shoes
FOR EACH ROW EXECUTE PROCEDURE CalculationTrueToSize();
